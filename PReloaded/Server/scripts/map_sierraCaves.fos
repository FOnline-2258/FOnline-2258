//
// FOClassic: Brave New World
// Sasabmeg
//
// map_sierraCaves.fos
//

#include "_entires.fos"
#include "_macros.fos"
#include "_maps.fos"
#include "elevators_h.fos"
#include "mapdata_h.fos"
#include "MsgStr.h"
#include "npc_roles_h.fos"
#include "utils_h.fos"



/*
bool s_Shaft(Critter& player, Scenery& valve, int skill, Item@ item)
{
    Map@ map = player.GetMap();
    if(!valid(item) && skill == -1 && map.GetData(MAP_DATA_ROPE) == 1)
    {
        player.TransitToMap(player.GetMap().GetLocation().GetMap(MAP_BoSbunkerlevel3).Id, 0);
        return true;
    }
    if(!valid(item) || item.GetProtoId() != PID_ROPE)
        return false;

    Item@ rope = map.AddItem(valve.HexX, valve.HexY, PID_SHAFT_WITH_ROPE, 1);
    if(!valid(rope))
        return false;
    map.SetData(MAP_DATA_ROPE, 1);
    if(item.GetCount() < 2)
        DeleteItem(item);
    else
        item.SetCount(item.GetCount() - 1);
    rope.SetScript("sierra_caves@_RopeInit");
    player.Say(SAY_NETMSG, "You've attached the rope to the top of the shaft.");
    return true;
}
*/


void _RopeInit(Item& item, bool firstTime) {
    item.SetEvent(ITEM_EVENT_SKILL, "_OnShaftRopeUse");
}

/*
 *  Use this in Sierra Caves elevators shafts with rope.
 *  Val0 - transit map proto ID
 *  Val1 - transit map Entire Number
 *  map_sierraCaves@_OnShaftRopeUse
**/
bool _OnShaftRopeUse(Item& item, Critter& player, int skill) {
    if(skill != -1) {
        return true;
    }
    if (valid(item)) {
        if (item.Val0 > 2500 && item.Val0 < 2600) {
            Map@ map = GetMap(item.MapId);
            if (valid(map)) {
                Map@ nextMap = map.GetLocation().GetMap(item.Val0);
                if (valid(nextMap)) {
                    player.TransitToMap(nextMap.Id, item.Val1);
                    return true;
                } else {
                    player.Say(SAY_NETMSG, "Cannot use that at this time.");
                    Log("Sierra Caves::_OnShaftRopeUse() - Invalid target map.");
                    return true;
                }
            } else {
                player.Say(SAY_NETMSG, "Cannot use that at this time.");
                Log("Sierra Caves::_OnShaftRopeUse() - Used item was on an invalid map.");
                return true;
            }
        } else {
            player.Say(SAY_NETMSG, "Cannot use that at this time.");
            Log("Sierra Caves::_OnShaftRopeUse() - Trying to exit Sierra Caves, check elevator shaft Val0.");
            return true;
        }
    } else {
        player.Say(SAY_NETMSG, "Cannot use that at this time.");
        Log("Sierra Caves::_OnShaftRopeUse() - Invalid Item");
        return true;
    }
}

bool _RopeGreasy(Critter& player, Scenery& shaft, int skill, Item@ item) {
    Log("skill = " + skill);
    if(skill != -1) {
        return true;
    }
    player.Say(SAY_EMOTE_ON_HEAD, "rope too greasy to climb up");
    player.Say(SAY_NETMSG, "As you touch the greasy rope again, you suddenly realize this was a one way trip.");
    Log("Sierra Caves::_OnShaftRopeUse() - Failed to use rope to climb up, it was too greasy");
    return true;
}
